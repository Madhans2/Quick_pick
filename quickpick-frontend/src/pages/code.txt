import { useEffect, useState } from "react";

export default function OrdersPage() {
  const [orders, setOrders] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchOrders = async () => {
      try {
        const token = localStorage.getItem("token");
        const res = await fetch("http://localhost:5000/api/orders", {
          headers: { Authorization: `Bearer ${token}` },
        });

        const ordersData = await res.json();

        // Attach product details for each item in each order
        const ordersWithProducts = await Promise.all(
          ordersData.map(async (order) => {
            if (!order.items || order.items.length === 0) return order;

            const itemsWithProducts = await Promise.all(
              order.items.map(async (item) => {
                try {
                  const productRes = await fetch(
                    `http://localhost:5000/api/products/${item.collectionName}/${item.productId}`
                  );
                  const productData = await productRes.json();
                  return { ...item, product: productData };
                } catch (err) {
                  console.error("Error fetching product:", err);
                  return { ...item, product: null };
                }
              })
            );

            return { ...order, items: itemsWithProducts };
          })
        );

        setOrders(ordersWithProducts);
      } catch (error) {
        console.error("Error fetching orders:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchOrders();
  }, []);

  if (loading) return <p>Loading orders...</p>;

  return (
    <div>
      <h1>My Orders</h1>
      {orders.length === 0 ? (
        <p>No orders found.</p>
      ) : (
        orders.map((order) => (
          <div
            key={order._id}
            style={{
              border: "1px solid #ccc",
              margin: "10px",
              padding: "10px",
            }}
          >
            <h3>Order ID: {order._id}</h3>
            <p>Status: {order.status}</p>
            <p>Total Price: ₹{order.totalPrice}</p>

            {order.items && order.items.length > 0 ? (
              order.items.map((item, index) => (
                <div key={index} style={{ marginTop: "10px", padding: "5px" }}>
                  {item.product ? (
                    <>
                      <h4>{item.product.name}</h4>
                      <p>Price: ₹{item.product.price}</p>
                    </>
                  ) : (
                    <>
                      <p>Collection: {item.collectionName}</p>
                      <p>Product ID: {item.productId}</p>
                    </>
                  )}
                  <p>Quantity: {item.quantity}</p>
                </div>
              ))
            ) : (
              <p>No items in this order.</p>
            )}
          </div>
        ))
      )}
    </div>
  );
}
